{"ast":null,"code":"import _classCallCheck from \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/src/Compenent/FirstPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport Slide from './slide';\nimport Button from './button'; //création de l'objet H2\n\nvar FirstPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FirstPage, _Component);\n\n  function FirstPage(props) {\n    var _this;\n\n    _classCallCheck(this, FirstPage);\n\n    // Ne pas oublier d'appeler le constructeur père ! (Obligatoire)\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FirstPage).call(this, props)); // On définit le state de notre component que l'on hérite de la classe \"Component\"\n    // Cela remplace la fonction \"getInitialState\"\n\n    _this.FirstPageOpening = function () {\n      _this.setState({\n        FirstPageAnimation: \"opening\"\n      });\n    };\n\n    _this.FirstPageClosing = function () {\n      _this.setState({\n        FirstPageAnimation: \"closing\"\n      });\n    };\n\n    _this.up = function () {\n      _this.setState({\n        Animation: \"up\"\n      });\n    };\n\n    _this.down = function () {\n      _this.setState({\n        Animation: \"down\"\n      });\n    };\n\n    _this.id = function (e) {\n      _this.setState({\n        id: e\n      });\n    };\n\n    _this.state = {\n      FirstPageAnimation: \"\",\n      Animation: \"\",\n      id: \"nope\"\n    };\n    return _this;\n  } //Animations de la page d'acceuil\n\n\n  _createClass(FirstPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //FirstPageAnimation\n      var FirstPage = \"FirstPage \";\n\n      if (this.state.FirstPageAnimation == \"opening\") {\n        FirstPage = \"FirstPage opening\";\n      } else if (this.state.FirstPageAnimation == \"closing\") {\n        FirstPage = \"FirstPage closing\";\n      } //slideAnimation\n\n\n      var slideClass = \"slide\";\n\n      if (this.state.Animation == \"up\") {\n        slideClass = \"slide up\";\n      } else if (this.state.Animation == \"down\") {\n        slideClass = \"slide down\";\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: FirstPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.h1\n      /*h1 */\n      ), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.h2\n      /*Mise en place d'un props qui h2 qui contiendra ce qu'on désire */\n      ), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.FirstPageOpening();\n\n          _this2.up();\n\n          _this2.id(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Start1\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.FirstPageOpening();\n\n          _this2.up();\n\n          _this2.id(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Start2\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.FirstPageOpening();\n\n          _this2.up();\n\n          _this2.id(3);\n          /*Cette methode me permet de récupérer un \"id\" me permettant par la suite d'activer le slide correspondant */\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Start3\")), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Slide, {\n        ClassName: this.state.id == \"1\" ? slideClass : \"\"\n        /* La récupération de l'id me permet de choisir lequelle des slides doit être activer */\n        ,\n        onClick: function onClick() {\n          _this2.FirstPageClosing();\n\n          _this2.down();\n        },\n        h2: \"hello billy1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Slide, {\n        ClassName: this.state.id == \"2\" ? slideClass : \"\",\n        onClick: function onClick() {\n          _this2.FirstPageClosing();\n\n          _this2.down();\n        },\n        h2: \"hello billy2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Slide, {\n        ClassName: this.state.id == \"3\" ? slideClass : \"\",\n        onClick: function onClick() {\n          _this2.FirstPageClosing();\n\n          _this2.down();\n        },\n        h2: \"hello billy3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FirstPage;\n}(Component);\n\nexport { FirstPage as default };","map":{"version":3,"sources":["/home/becode/becode_projects/z-perso/react-cv/react-cv-linux/src/Compenent/FirstPage.js"],"names":["React","Component","Fragment","Slide","Button","FirstPage","props","FirstPageOpening","setState","FirstPageAnimation","FirstPageClosing","up","Animation","down","id","e","state","slideClass","h1","h2"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Slide from './slide';\nimport Button from './button';\n\n//création de l'objet H2\nexport default class FirstPage extends Component {\n    constructor(props) {\n        // Ne pas oublier d'appeler le constructeur père ! (Obligatoire)\n        super(props);\n        // On définit le state de notre component que l'on hérite de la classe \"Component\"\n        // Cela remplace la fonction \"getInitialState\"\n        this.state = {\n            FirstPageAnimation : \"\",\n            Animation : \"\",\n            id : \"nope\"\n        };\n    }\n    //Animations de la page d'acceuil\n    FirstPageOpening = () =>{\n        this.setState({\n            FirstPageAnimation : \"opening\"\n        })\n    }\n    FirstPageClosing = () =>{\n        this.setState({\n            FirstPageAnimation : \"closing\"\n        })\n    }\n    //Animation des slides\n    up = () => {\n        this.setState({\n            Animation : \"up\",\n        })\n      }\n\n    down = () => {\n        this.setState({\n            Animation : \"down\"\n        })\n    }\n    //the id\n    id = (e) => {\n        this.setState({\n            id : e\n        })      \n    }\n    \n    render() {\n        //FirstPageAnimation\n        let FirstPage = \"FirstPage \"\n        if(this.state.FirstPageAnimation == \"opening\"){\n            FirstPage = \"FirstPage opening\"\n        }\n        else if (this.state.FirstPageAnimation == \"closing\"){\n            FirstPage = \"FirstPage closing\"\n        }\n        //slideAnimation\n\n        let slideClass =\"slide\"\n        if(this.state.Animation == \"up\"){\n            slideClass = \"slide up\"\n        }\n        else if (this.state.Animation == \"down\"){\n            slideClass = \"slide down\"\n        }\n        return (\n            <Fragment>\n            <div className={ FirstPage }>\n                <h1>\n                    { this.props.h1 /*h1 */ }\n                </h1>\n                <h2>\n                    { this.props.h2 /*Mise en place d'un props qui h2 qui contiendra ce qu'on désire */ }\n                </h2>\n                <div className=\"button\">\n                    <button onClick={ () => { this.FirstPageOpening(); this.up(); this.id(1) } }>Start1</button>\n                    <button onClick={ () => { this.FirstPageOpening(); this.up(); this.id(2) } }>Start2</button>\n                    <button onClick={ () => { this.FirstPageOpening(); this.up(); this.id(3) /*Cette methode me permet de récupérer un \"id\" me permettant par la suite d'activer le slide correspondant */ } }>Start3</button>\n                </div>\n                <Button/> \n            </div>\n            <Slide ClassName={ this.state.id==\"1\"?slideClass:\"\" /* La récupération de l'id me permet de choisir lequelle des slides doit être activer */} onClick={ () => { this.FirstPageClosing(); this.down()} } h2=\"hello billy1\" />\n            <Slide ClassName={ this.state.id==\"2\"?slideClass:\"\" } onClick={ () => { this.FirstPageClosing(); this.down() } } h2=\"hello billy2\" />\n            <Slide ClassName={ this.state.id==\"3\"?slideClass:\"\" } onClick={ () => { this.FirstPageClosing(); this.down() } } h2=\"hello billy3\" />\n            </Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}